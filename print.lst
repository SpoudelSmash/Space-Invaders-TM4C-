


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000         
   15 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   16 00000000                 THUMB
   17 00000000         
   18 00000000         
   19 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   20 00000000         ; Output a 32-bit number in unsigned decimal format
   21 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   22 00000000         ; Output: none
   23 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   24 00000000         LCD_OutDec
                               PROC
   25 00000000                 EXPORT           LCD_OutDec
   26 00000000 B53E            PUSH{R1-R5,      lr}
   27 00000002 4601            MOV              R1, R0
   28 00000004         
   29 00000004 F04F 030A       MOV              R3, #10
   30 00000008 F04F 0400       MOV              R4, #0
   31 0000000C         
   32 0000000C FBB1 F0F3 
                       loopdec UDIV             R0, R1, R3  ; R1%10 in R0
   33 00000010 FB00 F003       MUL              R0, R0, R3
   34 00000014 EBA1 0000       SUB              R0, R1, R0
   35 00000018         
   36 00000018 F100 0030       ADD              R0, #0x30
   37 0000001C         
   38 0000001C E92D 0401       PUSH             {R0, R10}
   39 00000020 F104 0401       ADD              R4, #1
   40 00000024         
   41 00000024 FBB1 F1F3       UDIV             R1, R1, R3  ;Update R1/10
   42 00000028 2900            CMP              R1, #0
   43 0000002A D1EF            BNE              loopdec
   44 0000002C         
   45 0000002C 2C00    popdec  CMP              R4, #0
   46 0000002E D006            BEQ              donedec
   47 00000030 F1A4 0401       SUB              R4, #1
   48 00000034 E8BD 0401       POP              {R0, R10}
   49 00000038 F7FF FFFE       BL               ST7735_OutChar
   50 0000003C         



ARM Macro Assembler    Page 2 


   51 0000003C E7F6            B                popdec
   52 0000003E         
   53 0000003E E8BD 403E 
                       donedec POP{R1-R5,       LR}
   54 00000042         
   55 00000042 4770            BX               LR
   56 00000044                 ENDP
   57 00000044         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   58 00000044         
   59 00000044         ; -----------------------LCD _OutFix--------------------
                       --
   60 00000044         ; Output characters to LCD display in fixed-point format
                       
   61 00000044         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   62 00000044         ; Inputs:  R0 is an unsigned 32-bit number
   63 00000044         ; Outputs: none
   64 00000044         ; E.g., R0=0,    then output "0.00 "
   65 00000044         ;       R0=3,    then output "0.03 "
   66 00000044         ;       R0=89,   then output "0.89 "
   67 00000044         ;       R0=123,  then output "1.23 "
   68 00000044         ;       R0=999,  then output "9.99 "
   69 00000044         ;       R0>999,  then output "*.** "
   70 00000044         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   71 00000044         LCD_OutFix
                               PROC
   72 00000044                 EXPORT           LCD_OutFix
   73 00000044 B53E            PUSH{R1-R5,      LR}
   74 00000046 F240 31E7       MOV              R1, #999
   75 0000004A 4288            CMP              R0, R1
   76 0000004C D82D            BHI              err
   77 0000004E         
   78 0000004E 4602            MOV              R2, R0
   79 00000050         
   80 00000050 F04F 0164       MOV              R1, #100
   81 00000054 FBB2 F3F1       UDIV             R3, R2, R1  ; in/100 (Output 10
                                                            0s place)
   82 00000058 F103 0030       ADD              R0, R3, #0x30
   83 0000005C B40C            PUSH             {R2, R3}
   84 0000005E F7FF FFFE       BL               ST7735_OutChar
   85 00000062 BC0C            POP{R2,R3}
   86 00000064         
   87 00000064 F04F 0164       MOV              R1, #100
   88 00000068 FB03 F301       MUL              R3, R3, R1  ; in= in%100
   89 0000006C EBA2 0203       SUB              R2, R2, R3
   90 00000070         
   91 00000070 F04F 002E       MOV              R0, #0x2E
   92 00000074 B40C            PUSH{R2,R3}
   93 00000076 F7FF FFFE       BL               ST7735_OutChar
   94 0000007A BC0C            POP{R2,R3}
   95 0000007C         
   96 0000007C F04F 010A       MOV              R1, #10
   97 00000080 FBB2 F3F1       UDIV             R3, R2, R1  ; in/10 (10s place)
                                                            
   98 00000084 F103 0030       ADD              R0, R3, #0x30
   99 00000088 B40C            PUSH{R2,R3}
  100 0000008A F7FF FFFE       BL               ST7735_OutChar
  101 0000008E BC0C            POP{R2,R3}
  102 00000090         



ARM Macro Assembler    Page 3 


  103 00000090 F04F 010A       MOV              R1, #10
  104 00000094 FB03 F301       MUL              R3, R3, R1  ; in= in%10
  105 00000098 EBA2 0203       SUB              R2, R2, R3
  106 0000009C F102 0030       ADD              R0, R2, #0x30
  107 000000A0 B40C            PUSH{R2,R3}
  108 000000A2 F7FF FFFE       BL               ST7735_OutChar
  109 000000A6 BC0C            POP{R2,R3}
  110 000000A8         
  111 000000A8 E00F            B                fixdone
  112 000000AA         
  113 000000AA         
  114 000000AA F04F 002A 
                       err     MOV              R0, #0x2A
  115 000000AE F7FF FFFE       BL               ST7735_OutChar
  116 000000B2 F04F 002E       MOV              R0, #0x2E
  117 000000B6 F7FF FFFE       BL               ST7735_OutChar
  118 000000BA F04F 002A       MOV              R0, #0x2A
  119 000000BE F7FF FFFE       BL               ST7735_OutChar
  120 000000C2 F04F 002A       MOV              R0, #0x2A
  121 000000C6 F7FF FFFE       BL               ST7735_OutChar
  122 000000CA         
  123 000000CA E8BD 403E 
                       fixdone POP              {R1-R5, LR}
  124 000000CE         
  125 000000CE 4770            BX               LR
  126 000000D0                 ENDP
  127 000000D0         
  128 000000D0                 ALIGN
  129 000000D0         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  130 000000D0         
  131 000000D0                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  132 000000D0                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_SpaceInvaders -IC:\Users\spoud\AppD
ata\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\spoud\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --
predefine="TM4C123GH6PM SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 15 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 24 in file Print.s
   Uses
      At line 25 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000044

Symbol: LCD_OutFix
   Definitions
      At line 71 in file Print.s
   Uses
      At line 72 in file Print.s
Comment: LCD_OutFix used once
donedec 0000003E

Symbol: donedec
   Definitions
      At line 53 in file Print.s
   Uses
      At line 46 in file Print.s
Comment: donedec used once
err 000000AA

Symbol: err
   Definitions
      At line 114 in file Print.s
   Uses
      At line 76 in file Print.s
Comment: err used once
fixdone 000000CA

Symbol: fixdone
   Definitions
      At line 123 in file Print.s
   Uses
      At line 111 in file Print.s
Comment: fixdone used once
loopdec 0000000C

Symbol: loopdec
   Definitions
      At line 32 in file Print.s
   Uses
      At line 43 in file Print.s
Comment: loopdec used once
popdec 0000002C

Symbol: popdec



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 45 in file Print.s
   Uses
      At line 51 in file Print.s
Comment: popdec used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 49 in file Print.s
      At line 84 in file Print.s
      At line 93 in file Print.s
      At line 100 in file Print.s
      At line 108 in file Print.s
      At line 115 in file Print.s
      At line 117 in file Print.s
      At line 119 in file Print.s
      At line 121 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
344 symbols in table
